
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'net.researchgate.release' version '3.0.0'
}

group = 'com.labmate'
version = '0.0.3-SNAPSHOT'

bootJar {
    archiveFileName = "riddle-box-game-${version}.jar"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar {
    enabled = false
}

java {
    sourceCompatibility = '17'

    // Java 컴파일러에 -parameters 옵션 추가
    withJavadocJar()
    withSourcesJar()
    tasks.withType(JavaCompile) {
        options.compilerArgs.add('-parameters')
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor

    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'build/generated'
        }
    }
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    //타임리프 스프링부트 통합(템플릿엔진을 빈에 등록하고, 타임리프용 뷰 리졸버를 스프링 빈에 자동 등록해줌)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //쿼리 파라미터 로그 남기기
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'


    //s3 버킷, build.gradle 파일에 AWS Java SDK 의존성을 추가
    implementation 'software.amazon.awssdk:s3:2.25.1'


    // Spring Security
    // Spring Security의 기본적인 기능을 포함하며, 웹 보안과 인증/인가 메커니즘을 구현할 수 있도록 지원
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    //OAuth 2.0 인증 서버 기능을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    //외부 OAuth 2.0 제공자(예: 구글, 페이스북)를 이용한 인증을 구현
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // Spring Security OAuth2 Resource Server
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    // Spring Security OAuth2 JOSE(jwt)
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    //Thymeleaf 템플릿 엔진과 Spring Security를 통합하기 위한 추가 라이브러리
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'


    //JWT 토큰 의존성
    // JJWT API
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    // JJWT Jackson Serializer/Deserializer
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    // JJWT Implementation
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    //test 롬복 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.projectlombok:lombok'
    implementation 'org.apache.logging.log4j:log4j-core'
    annotationProcessor 'org.projectlombok:lombok'


    //Querydsl 추가  빌드 과정속에 Qdsl을 넣은 것
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Gson 추가
    implementation 'com.google.code.gson:gson:2.8.9'

    // 이메일 인증을 위한 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-mail'
//    implementation 'javax.mail:javax.mail-api:1.6.2'  //자바17에는 맞지않다
//    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    // redis 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.data:spring-data-redis'
    implementation 'io.lettuce:lettuce-core' // Redis 클라이언트 라이브러리

    //마크다운 적용
    implementation 'org.commonmark:commonmark:0.21.0'

}

tasks.named('test') {
    useJUnitPlatform()
}


clean {
    delete file('src/main/generated')
}


//    runtimeOnly 'com.h2database:h2'
