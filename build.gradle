plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
//    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.labmate'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'build/generated'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    //쿼리 파라미터 로그 남기기
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // Spring Security
    // Spring Security의 기본적인 기능을 포함하며, 웹 보안과 인증/인가 메커니즘을 구현할 수 있도록 지원
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //OAuth 2.0 인증 서버 기능을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    //외부 OAuth 2.0 제공자(예: 구글, 페이스북)를 이용한 인증을 구현
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //Thymeleaf 템플릿 엔진과 Spring Security를 통합하기 위한 추가 라이브러리
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    //test 롬복 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


    //Querydsl 추가  빌드 과정속에 Qdsl을 넣은 것
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
    useJUnitPlatform()
}


clean {
   delete file('src/main/generated')
}






//    runtimeOnly 'com.h2database:h2'
